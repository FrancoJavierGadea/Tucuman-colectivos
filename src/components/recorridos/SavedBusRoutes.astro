---
const {style} = Astro.props;
---


<custom-saved-bus-routes class="Saved-bus-routes" style={style}>


</custom-saved-bus-routes>


<script>
    //@ts-nocheck
    import SAVED_BUS_ROUTES from '@/scripts/localStorage/SavedBusRoutes.js';

    class SavedBusRoutes extends HTMLElement {

        constructor(){
            super();

            this.#update(SAVED_BUS_ROUTES.savedRoutes);

            SAVED_BUS_ROUTES.on((savedRoutes) => {

                this.#update(savedRoutes);
            });
        }

        /**
         * @param {Set<String>} savedRoutes
         */
        #update(savedRoutes = new Set()){

            const elements = [...this.querySelectorAll('[route-id]')]
                .map(elem => elem.getAttribute('route-id'));

            savedRoutes.forEach(id => {

                // If the element is not already in the list
                if(!elements.includes(id)) {

                    // Get the bus card from the Bus-lines list
                    const busCard = document.querySelector(`.Bus-lines [route-id="${id}"]`);

                    // Clone the bus card and append it to the saved bus paths list
                    busCard && this.appendChild(busCard.cloneNode(true));
                }
            });

            // Remove the elements that are not in the saved
            elements.forEach(id => {

                if(!savedRoutes.has(id)){

                    const busCard = this.querySelector(`[route-id="${id}"]`);

                    busCard && this.removeChild(busCard);
                }
            });
        }
    }

    customElements.define('custom-saved-bus-routes', SavedBusRoutes);
</script>

<style>
    custom-saved-bus-routes.Saved-bus-routes {
        padding: 5px;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

</style>